/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ahms.ui;

import com.ahms.boundary.security.AccountBoundary;
import com.ahms.boundary.security.ReservationBoundary;
import com.ahms.model.entity.Account;
import com.ahms.model.entity.AccountTransactions;
import com.ahms.model.entity.Customers;
import com.ahms.model.entity.Reservation;
import com.ahms.model.entity.Rooms;
import com.ahms.ui.utils.GeneralFunctions;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rsoto
 */
public class AccountSearch extends javax.swing.JDialog {

    private Customers customer = null;
    private AccountBoundary accountB = null;
    private ReservationBoundary resB = null;
    private List<?> resultList = null;
    private List<Rooms> roomList = null;
    private DefaultTableModel tableModel = null;
    private MainFrm topFrame;
    private static final String AC = "AC";
    private static final String RS = "RS";
    private String action = "";

    /**
     * Creates new form AccountSearch
     */
    public AccountSearch(MainFrm parent, boolean modal, String action) {
        super(parent, modal);
        initComponents();
        this.topFrame = parent;
        this.roomList = new ArrayList<>();
        this.action = action;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblCus = new javax.swing.JLabel();
        jbBuscarCliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        jbSalir1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Droid Sans", 1, 14)); // NOI18N
        jLabel1.setText("Cliente:");
        jLabel1.setPreferredSize(new java.awt.Dimension(50, 15));

        lblCus.setFont(new java.awt.Font("Droid Sans", 1, 14)); // NOI18N
        lblCus.setPreferredSize(new java.awt.Dimension(150, 15));

        jbBuscarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ahms/ui/resources/1445772770_search-80px.png"))); // NOI18N
        jbBuscarCliente.setText("Buscar Cliente");
        jbBuscarCliente.setPreferredSize(new java.awt.Dimension(100, 20));
        jbBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarClienteActionPerformed(evt);
            }
        });

        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(resultTable);

        jToolBar1.setFloatable(false);
        jToolBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jbSalir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ahms/ui/resources/pack2/cross.png"))); // NOI18N
        jbSalir1.setToolTipText("Salir");
        jbSalir1.setFocusable(false);
        jbSalir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalir1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jbSalir1);
        jToolBar1.add(jSeparator1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ahms/ui/resources/pack3/Transfer.png"))); // NOI18N
        jButton1.setToolTipText("Cambiar cuarto");
        jButton1.setFocusable(false);
        jButton1.setPreferredSize(new java.awt.Dimension(50, 28));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ahms/ui/resources/pack3/Donate.png"))); // NOI18N
        jButton2.setToolTipText("Pagar Cuenta");
        jButton2.setFocusable(false);
        jButton2.setPreferredSize(new java.awt.Dimension(50, 28));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 882, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbBuscarCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarClienteActionPerformed

        CustomerReg customerReg;
        customerReg = new CustomerReg(this, true, null);
        customerReg.setVisible(true);
        customer = customerReg.getCustomer();
        lblCus.setText(customer.getFullName());
        if (AC.equalsIgnoreCase(action)) {
            resultList = searchAccounts(customer);

        } else {
            resultList = searchReservation(customer);
        }

        fillTable(resultTable);

    }//GEN-LAST:event_jbBuscarClienteActionPerformed


    private void jbSalir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalir1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbSalir1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Account row = null;
        List<Account> accountList =  (List<Account>) resultList;
        if (accountList == null) {
            GeneralFunctions.sendMessage(this, "No hay cuentas disponibles para trabajar.");
        } else {
            try {
                if (accountList.size() == 1) {
                    row = accountList.get(0);
                } else {
                    row = accountList.get(resultTable.convertRowIndexToModel(resultTable.getSelectedRow()));
                }
            } catch (IndexOutOfBoundsException e) {
                GeneralFunctions.sendMessage(this, "Favor de seleccionar una cuenta.");
            }
            if (row != null) {
                CheckOutForm checkOutForm = new CheckOutForm(this, true, row);
                checkOutForm.setVisible(rootPaneCheckingEnabled);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Account row = null;
        Rooms room = null;
        List<Account> accountList =  (List<Account>) this.resultList;
        if (accountList == null) {
            GeneralFunctions.sendMessage(this, "No hay cuentas disponibles para trabajar.");
        } else {
            try {
                if (accountList.size() == 1) {
                    row = accountList.get(0);
                } else {
                    row = accountList.get(resultTable.convertRowIndexToModel(resultTable.getSelectedRow()));
                }
            } catch (IndexOutOfBoundsException e) {
                GeneralFunctions.sendMessage(this, "Favor de seleccionar una cuenta.");
            }

            if (!roomList.isEmpty() && roomList.size() > 1) {
                SelectRoom select = new SelectRoom(this, true, roomList);
                select.setVisible(true);
                room = select.getSelectedRoom();
            } else {
                room = roomList.get(0);
            }
            if (room != null) {
                ChangeHistoryDlg chDlg = new ChangeHistoryDlg(this, true, row, room, topFrame.getMainUser());
                chDlg.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private List<Account> searchAccounts(Customers customer) {
        Account account = new Account();
        this.accountB = new AccountBoundary();
        account.setCusId(customer);
        return accountB.findByCusId(account);
    }
    private List<Reservation> searchReservation(Customers customer) {
        Reservation res = new Reservation();
        this.resB = new ReservationBoundary();
        return this.resB.search(res);
    }

    //</editor-fold>
    private void fillTable(JTable resultTable) {
        String col[] = {"ID", "Fecha de Entrada", "Fecha de Salida", "Total", "Estatus"};

        tableModel = new DefaultTableModel(col, 0) {
            @Override
            public boolean isCellEditable(int rowIndex, int mColIndex) {
                return false;
            }
        };
        List<Account> accountList =  (List<Account>) this.resultList;
        // The 0 argument is number rows.
        accountList.stream().forEach((next) -> {
            tableModel.addRow(new Object[]{next.getActId(), next.getActFecIni(), next.getActFecFin(), next.getActTotal(), next.getActStatus()});
            for (AccountTransactions at : next.getAccountTransactionsCollection()) {
                if (at.getSrvId() == null) {
                    roomList.add(at.getRmsId());
                }
            }
        });

        resultTable.setModel(tableModel);
        resultTable.getColumn("ID").setMinWidth(0);
        resultTable.getColumn("ID").setMaxWidth(0);
        resultTable.setColumnSelectionAllowed(false);
        resultTable.setCellSelectionEnabled(false);
        resultTable.setRowSelectionAllowed(true);
        resultTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccountSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccountSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccountSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccountSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AccountSearch dialog = new AccountSearch(new MainFrm(), true, "AC");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton jbBuscarCliente;
    private javax.swing.JButton jbSalir1;
    private javax.swing.JLabel lblCus;
    private javax.swing.JTable resultTable;
    // End of variables declaration//GEN-END:variables

    
}
